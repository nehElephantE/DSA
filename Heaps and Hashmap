-> Hashmap tabh use karna hai jabh kuch cheez tabular rakhna ho aur modify karna ho toh contant time pe ho jayega..jaise table of population of countries

public static void main(String[] args){
        HashMap<String,Integer> hm = new HashMap<>();
        //.put() se HashMap ke andar values chale jayenge
        hm.put("India",135);
        hm.put("China",205);
        hm.put("Pak",60);
        hm.put("US",35);
        hm.put("UK",15);

        System.out.println(hm);

        // If we add into HashMap..woh add kidhar bhi index value pe ho jayega

        //.get() se HashMap ke key ka value aa jayega ...ni hai toh null print hoga
        System.out.println(hm.get("India"));
        System.out.println(hm.get("Utopia"));

        //.containsKey() to check if that key exists in the HashMap or not
        System.out.println(hm.containsKey("India"));

        // to print Keyset
        Set<String> keys = hm.keySet();
        System.out.println(keys);

        // to make a loop through a HashMap....jaisa Key waisa woh for loop ka variable type
        // idhar key String tha toh for loop ke under String

        for(String key : hm.keySet()){
            int val = hm.get(key);
            System.out.println(key + " " + val);
        }
    }


###################
YOU ARE GIVEN A STRING STR. YOU ARE REQUIRED TO FIND THE CHARACTER WITH MAX FREQUENCY

public static void main(String[] args){
        String str = "bcbvbvgbhjgjbbgyg";

        HashMap<Character,Integer> hm = new HashMap<>();
        for(int i = 0;i<str.length();i++){
            char ch = str.charAt(i);
            // agar woh pehle se pada hai key toh add 1 to the old freq else initialise it with freq 1
            if(hm.containsKey(ch)){
                int of = hm.get(ch);
                int nf = of+1;
                hm.put(ch,nf);
            }
            else{
                hm.put(ch,1);
            }
        }

       
        char mfc = str.charAt(0);
        // idhar Key Character type ka tha toh for loop ke andar Character 
        for(Character key : hm.keySet()){
            if(hm.get(key) > hm.get(mfc)){
                mfc = key;
            }
        }

        System.out.println(mfc);
    }


###################
YOU ARE GIVEN NUMBERS N1 AND N2 REPRESENTING SIZES OF ARRAY S1 AND S2. WITH N1 AND N2 EELEMENTS. YOU ARE REQUIRED TO PRINT ALL ELEMENTS OF N2 WHICH ARE ALSO 
PRESENT IN N1(IN ORDER OF THIER OCCURENECE IN S2). DON'T PRINT DUPLICATE VALUES

 public static void main(String[] args){
       // pehle array ke elements ko HashMap mein daala along with its freq
       // dusre array pr loop lagaya dekha ki woh element hai kya HashMap mein...if yes then print and move to next element and delete that element from HashMap

       Scanner scn = new Scanner(System.in);
       int n1 = scn.nextInt();
       int[] a1 = new int[n1];
       for(int i = 0;i<a1.length;i++){
        a1[i] = scn.nextInt();
       }

       int n2 = scn.nextInt();
       int[] a2 = new int[n2];
       for(int i = 0;i<a2.length;i++){
        a2[i] = scn.nextInt();
       }

       HashMap<Integer,Integer> fmap = new HashMap<>();

       for(int val : a1){
        if(fmap.containsKey(val)){
            int of = fmap.get(val);
            int nf = of+1;
            fmap.put(val,nf);
        }
        else{
            fmap.put(val,1);
        }
       }

       for(int val : a2){
        if(fmap.containsKey(val)){
            System.out.println(val);
            fmap.remove(val);
        }
       }
    }



###################
YOU ARE GIVEN NUMBERS N1 AND N2 REPRESENTING SIZES OF ARRAY S1 AND S2. WITH N1 AND N2 EELEMENTS. YOU ARE REQUIRED TO PRINT ALL ELEMENTS OF N2 WHICH ARE ALSO 
PRESENT IN N1(IN ORDER OF THIER OCCURENECE IN S2). PRINT DUPLICATE VALUES

// ismein duplicate print karne the toh hum woh remove ni karenge HashMap se

 public static void main(String[] args){
       // pehle array ke elements ko HashMap mein daala along with its freq
       // dusre array pr loop lagaya dekha ki woh element hai kya HashMap mein...if yes then print and move to next element and delete that element from HashMap

       Scanner scn = new Scanner(System.in);
       int n1 = scn.nextInt();
       int[] a1 = new int[n1];
       for(int i = 0;i<a1.length;i++){
        a1[i] = scn.nextInt();
       }

       int n2 = scn.nextInt();
       int[] a2 = new int[n2];
       for(int i = 0;i<a2.length;i++){
        a2[i] = scn.nextInt();
       }

       HashMap<Integer,Integer> fmap = new HashMap<>();

       for(int val : a1){
        if(fmap.containsKey(val)){
            int of = fmap.get(val);
            int nf = of+1;
            fmap.put(val,nf);
        }
        else{
            fmap.put(val,1);
        }
       }

       for(int val : a2){
        if(fmap.containsKey(val) && fmap.get(val) > 0){
            System.out.println(val);
            int of = fmap.get(val);
            int nf = of-1;
            fmap.put(val,nf);
        }
       }
    }





###################
YOU ARE GIVEN A NUMBER N REPRESENTING THE SIZE OF AN ARRAY A. YOU ARE REQUIRED TO PRINT THE LONGEST SEQUENCE OF CONSUCUTIVE ELEMENTS IN THE ARRAY (IGNORING DUPLICATES)



###################
###################
###################
###################
###################
###################
###################
###################
###################















